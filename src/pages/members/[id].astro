---
import {
  getMembers, getReportCashTotal, getReportFullTotal, getDollarsPerDev, fmtCurrency
} from '../../member_util.ts';
import type { Member } from "../../content/config.ts";
import Layout from "../../layouts/Layout.astro";
import Prose from "../../components/Prose.astro";

interface Props {
  member: Member;
}

const { member } = Astro.props;

export async function getStaticPaths() {
  const memberItems = await getMembers();
  return memberItems.map(({ id, data }: { id: string, data: Member }) => {
    return { params: { id }, props: { member: data } };
  });
}

function getPlatformName(url: string) {
  const platformNames = new Map<string, string>([
    ['github.com', 'GitHub Sponsors'],
    ['thanks.dev', 'Thanks.dev'],
  ]);
  let host = '';
  try {
    host = new URL(url).host;
  } catch (err) {
  }
  return platformNames.get(host) || 'Other';
}
---
<Layout title="Open Source Pledge" navless={false}>
  <Prose>
    <div class="flex items-center">
      <img
        class="h-28 m-0 mr-8"
        src={member.urlSquareLogoWithBackground}
      >
      <h2 class="text-4xl m-0">
        {member.name}
        <small class="block text-base font-normal pt-2">Open Source Pledge Member</small>
      </h2>
    </div>

    <p>{member.description}</p>

    <a href={member.urlLearnMore}>Learn more â†’</a>

    {member.annualReports.map(report => <div class="annual-report mt-12">
      <div class="text-center">
        <h3 class="mt-0 text-2xl">Year Ending {report.dateYearEnding}</h3>
        <strong>{fmtCurrency(getDollarsPerDev(report))} / dev</strong>
      </div>

      <h4 class="text-xl">Payments to Independent Maintainers</h4>
      <table>
        <tr>
          <th class="text-left">Platform</th>
          <th class="text-right">Amount ($)</th>
        </tr>
        {report.monetaryPayments.map(entry => <tr>
          <td>{entry.urlDetails && <a href={entry.urlDetails}>{getPlatformName(entry.urlDetails)}</a>}</td>
          <td class="text-right">{fmtCurrency(entry.amount)}</td>
        </tr>)}
        <tr>
          <td>Total</td>
          <td class="text-right">{fmtCurrency(getReportCashTotal(report))}</td>
        </tr>
        <tr>
          <td>Average number of devs</td>
          <td class="text-right">{report.averageNumberOfDevs}</td>
        </tr>
        <tr>
          <td>$ / dev</td>
          <td class="text-right">{fmtCurrency(getDollarsPerDev(report))}</td>
        </tr>
      </table>

      <h4 class="text-xl">Other Contributions</h4>
      <table>
        <tr>
          <th class="text-left">Item</th>
          <th class="text-right">Amount ($)</th>
        </tr>
        <tr>
          <td>Value of time</td>
          <td class="text-right">{fmtCurrency(report.monetaryValueOfTime)}</td>
        </tr>
        <tr>
          <td>Value of materials</td>
          <td class="text-right">{fmtCurrency(report.monetaryValueOfMaterials)}</td>
        </tr>
        <tr>
          <td>Payments to independent maintainers</td>
          <td class="text-right">{fmtCurrency(getReportCashTotal(report))}</td>
        </tr>
        <tr>
          <td>Total</td>
          <td class="text-right">{fmtCurrency(getReportFullTotal(report))}</td>
        </tr>
      </table>
    </div>)}

    <small>
      This information is provided directly by {member.name}. Open
      Source Pledge does not carry out any in-depth validation of this data.
    </small>

  </Prose>
</Layout>
<style>
</style>
