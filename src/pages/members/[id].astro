---
import { getCollection } from 'astro:content';
import type { Member, MemberReport } from "../../content/config.ts";
import Layout from "../../layouts/Layout.astro";
import Prose from "../../components/Prose.astro";

interface Props {
  member: Member;
}

const { member } = Astro.props;

export async function getStaticPaths() {
  const memberItems = await getCollection('members');
  return memberItems.map(({ id, data }: { id: string, data: Member }) => {
    return { params: { id }, props: { member: data } };
  });
}

function getPlatformName(url: string) {
  const platformNames = new Map<string, string>([
    ['github.com', 'GitHub Sponsors'],
    ['thanks.dev', 'Thanks.dev'],
  ]);
  let host = '';
  try {
    host = new URL(url).host;
  } catch (err) {
  }
  return platformNames.get(host) || 'Other';
}

function getReportCashTotal(report: MemberReport) {
  return report.monetaryPayments
    .map((d) => d.amount)
    .reduce((acc, d) => acc + d, 0);
}

function getReportFullTotal(report: MemberReport) {
  return getReportCashTotal(report) + report.monetaryValueOfTime + report.monetaryValueOfMaterials;
}

function getDollarsPerDev(report: MemberReport) {
  return getReportCashTotal(report) / report.averageNumberOfDevs;
}

function fmtCurrency(num: number) {
  return '$' + num.toLocaleString(undefined, {
    minimumFractionDigits: 2,
    maximumFractionDigits: 2,
  });
}
---
<Layout title="OSS Pledge">
  <main class="flex justify-center max-w-xl p-4">
    <Prose>
      <h1 class="text-app-green mt-8 mb-4 text-5xl font-bold">OSS Pledge</h1>

      <a href="/">Home</a>

      <h2>{member.name}</h2>

      <img src={member.urlLogoWithBackground}>

      <p>{member.description}</p>

      <a href={member.urlLearnMore}>Learn more â†’</a>

      {member.annualReports.map(report => <div class="annual-report">
        <h3>Year Ending {report.dateYearEnding}</h3>

        <b>{fmtCurrency(getDollarsPerDev(report))} / dev</b>

        <h4>Payments to Independent Maintainers</h4>
        <table>
          <tr>
            <th class="text-left">Platform</th>
            <th class="text-right">Amount ($)</th>
          </tr>
          {report.monetaryPayments.map(entry => <tr>
            <td>{entry.urlDetails && <a href={entry.urlDetails}>{getPlatformName(entry.urlDetails)}</a>}</td>
            <td class="text-right">{fmtCurrency(entry.amount)}</td>
          </tr>)}
          <tr>
            <td>Total</td>
            <td class="text-right">{fmtCurrency(getReportCashTotal(report))}</td>
          </tr>
          <tr>
            <td>Average number of devs</td>
            <td class="text-right">{fmtCurrency(report.averageNumberOfDevs)}</td>
          </tr>
          <tr>
            <td>$ / dev</td>
            <td class="text-right">{fmtCurrency(getDollarsPerDev(report))}</td>
          </tr>
        </table>

        <h4>Other Contributions</h4>
        <table>
          <tr>
            <th class="text-left">Item</th>
            <th class="text-right">Amount ($)</th>
          </tr>
          <tr>
            <td>Value of time</td>
            <td class="text-right">{fmtCurrency(report.monetaryValueOfTime)}</td>
          </tr>
          <tr>
            <td>Value of materials</td>
            <td class="text-right">{fmtCurrency(report.monetaryValueOfMaterials)}</td>
          </tr>
          <tr>
            <td>Payments to independent maintainers</td>
            <td class="text-right">{fmtCurrency(getReportCashTotal(report))}</td>
          </tr>
          <tr>
            <td>Total</td>
            <td class="text-right">{fmtCurrency(getReportFullTotal(report))}</td>
          </tr>
        </table>
      </div>)}

      <small>
        This information is provided directly by {member.name}. Open
        Source Pledge does not carry out any in-depth validation of this data.
      </small>

    </Prose>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
</style>
